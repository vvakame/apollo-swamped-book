// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`graphql TypeInfo 1`] = `
Object {
  "inputType": undefined,
  "nodeKind": "Document",
  "nodeName": null,
  "parentInputType": undefined,
  "parentType": undefined,
  "type": undefined,
}
`;

exports[`graphql TypeInfo 2`] = `
Object {
  "inputType": undefined,
  "nodeKind": "OperationDefinition",
  "nodeName": null,
  "parentInputType": undefined,
  "parentType": undefined,
  "type": "Query",
}
`;

exports[`graphql TypeInfo 3`] = `
Object {
  "inputType": undefined,
  "nodeKind": "SelectionSet",
  "nodeName": null,
  "parentInputType": undefined,
  "parentType": "Query",
  "type": "Query",
}
`;

exports[`graphql TypeInfo 4`] = `
Object {
  "inputType": undefined,
  "nodeKind": "Field",
  "nodeName": null,
  "parentInputType": undefined,
  "parentType": "Query",
  "type": "String",
}
`;

exports[`graphql TypeInfo 5`] = `
Object {
  "inputType": undefined,
  "nodeKind": "Name",
  "nodeName": "foo",
  "parentInputType": undefined,
  "parentType": "Query",
  "type": "String",
}
`;

exports[`graphql TypeInfo 6`] = `
Object {
  "inputType": "ID",
  "nodeKind": "Argument",
  "nodeName": null,
  "parentInputType": undefined,
  "parentType": "Query",
  "type": "String",
}
`;

exports[`graphql TypeInfo 7`] = `
Object {
  "inputType": "ID",
  "nodeKind": "Name",
  "nodeName": "id",
  "parentInputType": undefined,
  "parentType": "Query",
  "type": "String",
}
`;

exports[`graphql TypeInfo 8`] = `
Object {
  "inputType": "ID",
  "nodeKind": "StringValue",
  "nodeName": null,
  "parentInputType": undefined,
  "parentType": "Query",
  "type": "String",
}
`;

exports[`graphql astFromValue 1`] = `
Object {
  "kind": "StringValue",
  "value": "test",
}
`;

exports[`graphql buildASTSchema 1`] = `
"type Query {
  foo: String
}
"
`;

exports[`graphql buildClientSchema 1`] = `
GraphQLSchema {
  "__allowedLegacyNames": Array [],
  "__validationErrors": undefined,
  "_directives": Array [
    "@skip",
    "@include",
    "@deprecated",
  ],
  "_implementations": Object {},
  "_mutationType": null,
  "_possibleTypeMap": Object {},
  "_queryType": "Query",
  "_subscriptionType": null,
  "_typeMap": Object {
    "Boolean": "Boolean",
    "Query": "Query",
    "String": "String",
    "__Directive": "__Directive",
    "__DirectiveLocation": "__DirectiveLocation",
    "__EnumValue": "__EnumValue",
    "__Field": "__Field",
    "__InputValue": "__InputValue",
    "__Schema": "__Schema",
    "__Type": "__Type",
    "__TypeKind": "__TypeKind",
  },
  "astNode": undefined,
  "extensionASTNodes": undefined,
}
`;

exports[`graphql buildSchema 1`] = `
GraphQLSchema {
  "__allowedLegacyNames": Array [],
  "__validationErrors": undefined,
  "_directives": Array [
    "@skip",
    "@include",
    "@deprecated",
  ],
  "_implementations": Object {},
  "_mutationType": null,
  "_possibleTypeMap": Object {},
  "_queryType": "Query",
  "_subscriptionType": null,
  "_typeMap": Object {
    "Boolean": "Boolean",
    "Query": "Query",
    "String": "String",
    "__Directive": "__Directive",
    "__DirectiveLocation": "__DirectiveLocation",
    "__EnumValue": "__EnumValue",
    "__Field": "__Field",
    "__InputValue": "__InputValue",
    "__Schema": "__Schema",
    "__Type": "__Type",
    "__TypeKind": "__TypeKind",
  },
  "astNode": undefined,
  "extensionASTNodes": undefined,
}
`;

exports[`graphql graphql 1`] = `
Object {
  "data": Object {
    "__schema": Object {
      "directives": Array [
        Object {
          "args": Array [
            Object {
              "defaultValue": null,
              "description": "Skipped when true.",
              "name": "if",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null,
                },
              },
            },
          ],
          "description": "Directs the executor to skip this field or fragment when the \`if\` argument is true.",
          "locations": Array [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT",
          ],
          "name": "skip",
        },
        Object {
          "args": Array [
            Object {
              "defaultValue": null,
              "description": "Included when true.",
              "name": "if",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null,
                },
              },
            },
          ],
          "description": "Directs the executor to include this field or fragment only when the \`if\` argument is true.",
          "locations": Array [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT",
          ],
          "name": "include",
        },
        Object {
          "args": Array [
            Object {
              "defaultValue": "\\"No longer supported\\"",
              "description": "Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax (as specified by [CommonMark](https://commonmark.org/).",
              "name": "reason",
              "type": Object {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
          ],
          "description": "Marks an element of a GraphQL schema as no longer supported.",
          "locations": Array [
            "FIELD_DEFINITION",
            "ENUM_VALUE",
          ],
          "name": "deprecated",
        },
      ],
      "mutationType": null,
      "queryType": Object {
        "name": "Query",
      },
      "subscriptionType": null,
      "types": Array [
        Object {
          "description": null,
          "enumValues": null,
          "fields": Array [
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "foo",
              "type": Object {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
          ],
          "inputFields": null,
          "interfaces": Array [],
          "kind": "OBJECT",
          "name": "Query",
          "possibleTypes": null,
        },
        Object {
          "description": "The \`String\` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "String",
          "possibleTypes": null,
        },
        Object {
          "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
          "enumValues": null,
          "fields": Array [
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": "A list of all types supported by this server.",
              "isDeprecated": false,
              "name": "types",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "LIST",
                  "name": null,
                  "ofType": Object {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": Object {
                      "kind": "OBJECT",
                      "name": "__Type",
                      "ofType": null,
                    },
                  },
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": "The type that query operations will be rooted at.",
              "isDeprecated": false,
              "name": "queryType",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null,
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
              "isDeprecated": false,
              "name": "mutationType",
              "type": Object {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null,
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": "If this server support subscription, the type that subscription operations will be rooted at.",
              "isDeprecated": false,
              "name": "subscriptionType",
              "type": Object {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null,
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": "A list of all directives supported by this server.",
              "isDeprecated": false,
              "name": "directives",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "LIST",
                  "name": null,
                  "ofType": Object {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": Object {
                      "kind": "OBJECT",
                      "name": "__Directive",
                      "ofType": null,
                    },
                  },
                },
              },
            },
          ],
          "inputFields": null,
          "interfaces": Array [],
          "kind": "OBJECT",
          "name": "__Schema",
          "possibleTypes": null,
        },
        Object {
          "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the \`__TypeKind\` enum.

Depending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
          "enumValues": null,
          "fields": Array [
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "kind",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "ENUM",
                  "name": "__TypeKind",
                  "ofType": null,
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": Object {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": Object {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            Object {
              "args": Array [
                Object {
                  "defaultValue": "false",
                  "description": null,
                  "name": "includeDeprecated",
                  "type": Object {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null,
                  },
                },
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "fields",
              "type": Object {
                "kind": "LIST",
                "name": null,
                "ofType": Object {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": Object {
                    "kind": "OBJECT",
                    "name": "__Field",
                    "ofType": null,
                  },
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "interfaces",
              "type": Object {
                "kind": "LIST",
                "name": null,
                "ofType": Object {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": Object {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null,
                  },
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "possibleTypes",
              "type": Object {
                "kind": "LIST",
                "name": null,
                "ofType": Object {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": Object {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null,
                  },
                },
              },
            },
            Object {
              "args": Array [
                Object {
                  "defaultValue": "false",
                  "description": null,
                  "name": "includeDeprecated",
                  "type": Object {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null,
                  },
                },
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "enumValues",
              "type": Object {
                "kind": "LIST",
                "name": null,
                "ofType": Object {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": Object {
                    "kind": "OBJECT",
                    "name": "__EnumValue",
                    "ofType": null,
                  },
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "inputFields",
              "type": Object {
                "kind": "LIST",
                "name": null,
                "ofType": Object {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": Object {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null,
                  },
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ofType",
              "type": Object {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null,
              },
            },
          ],
          "inputFields": null,
          "interfaces": Array [],
          "kind": "OBJECT",
          "name": "__Type",
          "possibleTypes": null,
        },
        Object {
          "description": "An enum describing what kind of type a given \`__Type\` is.",
          "enumValues": Array [
            Object {
              "deprecationReason": null,
              "description": "Indicates this type is a scalar.",
              "isDeprecated": false,
              "name": "SCALAR",
            },
            Object {
              "deprecationReason": null,
              "description": "Indicates this type is an object. \`fields\` and \`interfaces\` are valid fields.",
              "isDeprecated": false,
              "name": "OBJECT",
            },
            Object {
              "deprecationReason": null,
              "description": "Indicates this type is an interface. \`fields\` and \`possibleTypes\` are valid fields.",
              "isDeprecated": false,
              "name": "INTERFACE",
            },
            Object {
              "deprecationReason": null,
              "description": "Indicates this type is a union. \`possibleTypes\` is a valid field.",
              "isDeprecated": false,
              "name": "UNION",
            },
            Object {
              "deprecationReason": null,
              "description": "Indicates this type is an enum. \`enumValues\` is a valid field.",
              "isDeprecated": false,
              "name": "ENUM",
            },
            Object {
              "deprecationReason": null,
              "description": "Indicates this type is an input object. \`inputFields\` is a valid field.",
              "isDeprecated": false,
              "name": "INPUT_OBJECT",
            },
            Object {
              "deprecationReason": null,
              "description": "Indicates this type is a list. \`ofType\` is a valid field.",
              "isDeprecated": false,
              "name": "LIST",
            },
            Object {
              "deprecationReason": null,
              "description": "Indicates this type is a non-null. \`ofType\` is a valid field.",
              "isDeprecated": false,
              "name": "NON_NULL",
            },
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "__TypeKind",
          "possibleTypes": null,
        },
        Object {
          "description": "The \`Boolean\` scalar type represents \`true\` or \`false\`.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "Boolean",
          "possibleTypes": null,
        },
        Object {
          "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
          "enumValues": null,
          "fields": Array [
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": Object {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "args",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "LIST",
                  "name": null,
                  "ofType": Object {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": Object {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null,
                    },
                  },
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null,
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isDeprecated",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null,
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deprecationReason",
              "type": Object {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
          ],
          "inputFields": null,
          "interfaces": Array [],
          "kind": "OBJECT",
          "name": "__Field",
          "possibleTypes": null,
        },
        Object {
          "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
          "enumValues": null,
          "fields": Array [
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": Object {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null,
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": "A GraphQL-formatted string representing the default value for this input value.",
              "isDeprecated": false,
              "name": "defaultValue",
              "type": Object {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
          ],
          "inputFields": null,
          "interfaces": Array [],
          "kind": "OBJECT",
          "name": "__InputValue",
          "possibleTypes": null,
        },
        Object {
          "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
          "enumValues": null,
          "fields": Array [
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": Object {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isDeprecated",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null,
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deprecationReason",
              "type": Object {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
          ],
          "inputFields": null,
          "interfaces": Array [],
          "kind": "OBJECT",
          "name": "__EnumValue",
          "possibleTypes": null,
        },
        Object {
          "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.

In some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
          "enumValues": null,
          "fields": Array [
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": Object {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "locations",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "LIST",
                  "name": null,
                  "ofType": Object {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": Object {
                      "kind": "ENUM",
                      "name": "__DirectiveLocation",
                      "ofType": null,
                    },
                  },
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "args",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "LIST",
                  "name": null,
                  "ofType": Object {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": Object {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null,
                    },
                  },
                },
              },
            },
          ],
          "inputFields": null,
          "interfaces": Array [],
          "kind": "OBJECT",
          "name": "__Directive",
          "possibleTypes": null,
        },
        Object {
          "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
          "enumValues": Array [
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to a query operation.",
              "isDeprecated": false,
              "name": "QUERY",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to a mutation operation.",
              "isDeprecated": false,
              "name": "MUTATION",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to a subscription operation.",
              "isDeprecated": false,
              "name": "SUBSCRIPTION",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to a field.",
              "isDeprecated": false,
              "name": "FIELD",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to a fragment definition.",
              "isDeprecated": false,
              "name": "FRAGMENT_DEFINITION",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to a fragment spread.",
              "isDeprecated": false,
              "name": "FRAGMENT_SPREAD",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to an inline fragment.",
              "isDeprecated": false,
              "name": "INLINE_FRAGMENT",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to a variable definition.",
              "isDeprecated": false,
              "name": "VARIABLE_DEFINITION",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to a schema definition.",
              "isDeprecated": false,
              "name": "SCHEMA",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to a scalar definition.",
              "isDeprecated": false,
              "name": "SCALAR",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to an object type definition.",
              "isDeprecated": false,
              "name": "OBJECT",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to a field definition.",
              "isDeprecated": false,
              "name": "FIELD_DEFINITION",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to an argument definition.",
              "isDeprecated": false,
              "name": "ARGUMENT_DEFINITION",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to an interface definition.",
              "isDeprecated": false,
              "name": "INTERFACE",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to a union definition.",
              "isDeprecated": false,
              "name": "UNION",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to an enum definition.",
              "isDeprecated": false,
              "name": "ENUM",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to an enum value definition.",
              "isDeprecated": false,
              "name": "ENUM_VALUE",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to an input object type definition.",
              "isDeprecated": false,
              "name": "INPUT_OBJECT",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to an input object field definition.",
              "isDeprecated": false,
              "name": "INPUT_FIELD_DEFINITION",
            },
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "__DirectiveLocation",
          "possibleTypes": null,
        },
      ],
    },
  },
}
`;

exports[`graphql graphqlSync 1`] = `
Object {
  "data": Object {
    "__schema": Object {
      "directives": Array [
        Object {
          "args": Array [
            Object {
              "defaultValue": null,
              "description": "Skipped when true.",
              "name": "if",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null,
                },
              },
            },
          ],
          "description": "Directs the executor to skip this field or fragment when the \`if\` argument is true.",
          "locations": Array [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT",
          ],
          "name": "skip",
        },
        Object {
          "args": Array [
            Object {
              "defaultValue": null,
              "description": "Included when true.",
              "name": "if",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null,
                },
              },
            },
          ],
          "description": "Directs the executor to include this field or fragment only when the \`if\` argument is true.",
          "locations": Array [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT",
          ],
          "name": "include",
        },
        Object {
          "args": Array [
            Object {
              "defaultValue": "\\"No longer supported\\"",
              "description": "Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax (as specified by [CommonMark](https://commonmark.org/).",
              "name": "reason",
              "type": Object {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
          ],
          "description": "Marks an element of a GraphQL schema as no longer supported.",
          "locations": Array [
            "FIELD_DEFINITION",
            "ENUM_VALUE",
          ],
          "name": "deprecated",
        },
      ],
      "mutationType": null,
      "queryType": Object {
        "name": "Query",
      },
      "subscriptionType": null,
      "types": Array [
        Object {
          "description": null,
          "enumValues": null,
          "fields": Array [
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "foo",
              "type": Object {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
          ],
          "inputFields": null,
          "interfaces": Array [],
          "kind": "OBJECT",
          "name": "Query",
          "possibleTypes": null,
        },
        Object {
          "description": "The \`String\` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "String",
          "possibleTypes": null,
        },
        Object {
          "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
          "enumValues": null,
          "fields": Array [
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": "A list of all types supported by this server.",
              "isDeprecated": false,
              "name": "types",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "LIST",
                  "name": null,
                  "ofType": Object {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": Object {
                      "kind": "OBJECT",
                      "name": "__Type",
                      "ofType": null,
                    },
                  },
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": "The type that query operations will be rooted at.",
              "isDeprecated": false,
              "name": "queryType",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null,
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
              "isDeprecated": false,
              "name": "mutationType",
              "type": Object {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null,
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": "If this server support subscription, the type that subscription operations will be rooted at.",
              "isDeprecated": false,
              "name": "subscriptionType",
              "type": Object {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null,
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": "A list of all directives supported by this server.",
              "isDeprecated": false,
              "name": "directives",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "LIST",
                  "name": null,
                  "ofType": Object {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": Object {
                      "kind": "OBJECT",
                      "name": "__Directive",
                      "ofType": null,
                    },
                  },
                },
              },
            },
          ],
          "inputFields": null,
          "interfaces": Array [],
          "kind": "OBJECT",
          "name": "__Schema",
          "possibleTypes": null,
        },
        Object {
          "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the \`__TypeKind\` enum.

Depending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
          "enumValues": null,
          "fields": Array [
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "kind",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "ENUM",
                  "name": "__TypeKind",
                  "ofType": null,
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": Object {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": Object {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            Object {
              "args": Array [
                Object {
                  "defaultValue": "false",
                  "description": null,
                  "name": "includeDeprecated",
                  "type": Object {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null,
                  },
                },
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "fields",
              "type": Object {
                "kind": "LIST",
                "name": null,
                "ofType": Object {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": Object {
                    "kind": "OBJECT",
                    "name": "__Field",
                    "ofType": null,
                  },
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "interfaces",
              "type": Object {
                "kind": "LIST",
                "name": null,
                "ofType": Object {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": Object {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null,
                  },
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "possibleTypes",
              "type": Object {
                "kind": "LIST",
                "name": null,
                "ofType": Object {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": Object {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null,
                  },
                },
              },
            },
            Object {
              "args": Array [
                Object {
                  "defaultValue": "false",
                  "description": null,
                  "name": "includeDeprecated",
                  "type": Object {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null,
                  },
                },
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "enumValues",
              "type": Object {
                "kind": "LIST",
                "name": null,
                "ofType": Object {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": Object {
                    "kind": "OBJECT",
                    "name": "__EnumValue",
                    "ofType": null,
                  },
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "inputFields",
              "type": Object {
                "kind": "LIST",
                "name": null,
                "ofType": Object {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": Object {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null,
                  },
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ofType",
              "type": Object {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null,
              },
            },
          ],
          "inputFields": null,
          "interfaces": Array [],
          "kind": "OBJECT",
          "name": "__Type",
          "possibleTypes": null,
        },
        Object {
          "description": "An enum describing what kind of type a given \`__Type\` is.",
          "enumValues": Array [
            Object {
              "deprecationReason": null,
              "description": "Indicates this type is a scalar.",
              "isDeprecated": false,
              "name": "SCALAR",
            },
            Object {
              "deprecationReason": null,
              "description": "Indicates this type is an object. \`fields\` and \`interfaces\` are valid fields.",
              "isDeprecated": false,
              "name": "OBJECT",
            },
            Object {
              "deprecationReason": null,
              "description": "Indicates this type is an interface. \`fields\` and \`possibleTypes\` are valid fields.",
              "isDeprecated": false,
              "name": "INTERFACE",
            },
            Object {
              "deprecationReason": null,
              "description": "Indicates this type is a union. \`possibleTypes\` is a valid field.",
              "isDeprecated": false,
              "name": "UNION",
            },
            Object {
              "deprecationReason": null,
              "description": "Indicates this type is an enum. \`enumValues\` is a valid field.",
              "isDeprecated": false,
              "name": "ENUM",
            },
            Object {
              "deprecationReason": null,
              "description": "Indicates this type is an input object. \`inputFields\` is a valid field.",
              "isDeprecated": false,
              "name": "INPUT_OBJECT",
            },
            Object {
              "deprecationReason": null,
              "description": "Indicates this type is a list. \`ofType\` is a valid field.",
              "isDeprecated": false,
              "name": "LIST",
            },
            Object {
              "deprecationReason": null,
              "description": "Indicates this type is a non-null. \`ofType\` is a valid field.",
              "isDeprecated": false,
              "name": "NON_NULL",
            },
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "__TypeKind",
          "possibleTypes": null,
        },
        Object {
          "description": "The \`Boolean\` scalar type represents \`true\` or \`false\`.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "Boolean",
          "possibleTypes": null,
        },
        Object {
          "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
          "enumValues": null,
          "fields": Array [
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": Object {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "args",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "LIST",
                  "name": null,
                  "ofType": Object {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": Object {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null,
                    },
                  },
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null,
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isDeprecated",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null,
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deprecationReason",
              "type": Object {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
          ],
          "inputFields": null,
          "interfaces": Array [],
          "kind": "OBJECT",
          "name": "__Field",
          "possibleTypes": null,
        },
        Object {
          "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
          "enumValues": null,
          "fields": Array [
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": Object {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null,
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": "A GraphQL-formatted string representing the default value for this input value.",
              "isDeprecated": false,
              "name": "defaultValue",
              "type": Object {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
          ],
          "inputFields": null,
          "interfaces": Array [],
          "kind": "OBJECT",
          "name": "__InputValue",
          "possibleTypes": null,
        },
        Object {
          "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
          "enumValues": null,
          "fields": Array [
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": Object {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isDeprecated",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null,
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deprecationReason",
              "type": Object {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
          ],
          "inputFields": null,
          "interfaces": Array [],
          "kind": "OBJECT",
          "name": "__EnumValue",
          "possibleTypes": null,
        },
        Object {
          "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.

In some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
          "enumValues": null,
          "fields": Array [
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": Object {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "locations",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "LIST",
                  "name": null,
                  "ofType": Object {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": Object {
                      "kind": "ENUM",
                      "name": "__DirectiveLocation",
                      "ofType": null,
                    },
                  },
                },
              },
            },
            Object {
              "args": Array [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "args",
              "type": Object {
                "kind": "NON_NULL",
                "name": null,
                "ofType": Object {
                  "kind": "LIST",
                  "name": null,
                  "ofType": Object {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": Object {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null,
                    },
                  },
                },
              },
            },
          ],
          "inputFields": null,
          "interfaces": Array [],
          "kind": "OBJECT",
          "name": "__Directive",
          "possibleTypes": null,
        },
        Object {
          "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
          "enumValues": Array [
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to a query operation.",
              "isDeprecated": false,
              "name": "QUERY",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to a mutation operation.",
              "isDeprecated": false,
              "name": "MUTATION",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to a subscription operation.",
              "isDeprecated": false,
              "name": "SUBSCRIPTION",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to a field.",
              "isDeprecated": false,
              "name": "FIELD",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to a fragment definition.",
              "isDeprecated": false,
              "name": "FRAGMENT_DEFINITION",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to a fragment spread.",
              "isDeprecated": false,
              "name": "FRAGMENT_SPREAD",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to an inline fragment.",
              "isDeprecated": false,
              "name": "INLINE_FRAGMENT",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to a variable definition.",
              "isDeprecated": false,
              "name": "VARIABLE_DEFINITION",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to a schema definition.",
              "isDeprecated": false,
              "name": "SCHEMA",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to a scalar definition.",
              "isDeprecated": false,
              "name": "SCALAR",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to an object type definition.",
              "isDeprecated": false,
              "name": "OBJECT",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to a field definition.",
              "isDeprecated": false,
              "name": "FIELD_DEFINITION",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to an argument definition.",
              "isDeprecated": false,
              "name": "ARGUMENT_DEFINITION",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to an interface definition.",
              "isDeprecated": false,
              "name": "INTERFACE",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to a union definition.",
              "isDeprecated": false,
              "name": "UNION",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to an enum definition.",
              "isDeprecated": false,
              "name": "ENUM",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to an enum value definition.",
              "isDeprecated": false,
              "name": "ENUM_VALUE",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to an input object type definition.",
              "isDeprecated": false,
              "name": "INPUT_OBJECT",
            },
            Object {
              "deprecationReason": null,
              "description": "Location adjacent to an input object field definition.",
              "isDeprecated": false,
              "name": "INPUT_FIELD_DEFINITION",
            },
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "__DirectiveLocation",
          "possibleTypes": null,
        },
      ],
    },
  },
}
`;

exports[`graphql introspectionQuery 1`] = `
"
    query IntrospectionQuery {
      __schema {
        queryType { name }
        mutationType { name }
        subscriptionType { name }
        types {
          ...FullType
        }
        directives {
          name
          description
          locations
          args {
            ...InputValue
          }
        }
      }
    }

    fragment FullType on __Type {
      kind
      name
      description
      fields(includeDeprecated: true) {
        name
        description
        args {
          ...InputValue
        }
        type {
          ...TypeRef
        }
        isDeprecated
        deprecationReason
      }
      inputFields {
        ...InputValue
      }
      interfaces {
        ...TypeRef
      }
      enumValues(includeDeprecated: true) {
        name
        description
        isDeprecated
        deprecationReason
      }
      possibleTypes {
        ...TypeRef
      }
    }

    fragment InputValue on __InputValue {
      name
      description
      type { ...TypeRef }
      defaultValue
    }

    fragment TypeRef on __Type {
      kind
      name
      ofType {
        kind
        name
        ofType {
          kind
          name
          ofType {
            kind
            name
            ofType {
              kind
              name
              ofType {
                kind
                name
                ofType {
                  kind
                  name
                  ofType {
                    kind
                    name
                  }
                }
              }
            }
          }
        }
      }
    }
  "
`;

exports[`graphql parse 1`] = `
Object {
  "definitions": Array [
    Object {
      "directives": Array [],
      "kind": "OperationDefinition",
      "loc": Object {
        "end": 24,
        "start": 4,
      },
      "name": undefined,
      "operation": "query",
      "selectionSet": Object {
        "kind": "SelectionSet",
        "loc": Object {
          "end": 24,
          "start": 10,
        },
        "selections": Array [
          Object {
            "alias": undefined,
            "arguments": Array [],
            "directives": Array [],
            "kind": "Field",
            "loc": Object {
              "end": 19,
              "start": 16,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 19,
                "start": 16,
              },
              "value": "foo",
            },
            "selectionSet": undefined,
          },
        ],
      },
      "variableDefinitions": Array [],
    },
  ],
  "kind": "Document",
  "loc": Object {
    "end": 27,
    "start": 0,
  },
}
`;

exports[`graphql parse 2`] = `
Object {
  "definitions": Array [
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "loc": Object {
            "end": 32,
            "start": 21,
          },
          "name": Object {
            "kind": "Name",
            "loc": Object {
              "end": 24,
              "start": 21,
            },
            "value": "foo",
          },
          "type": Object {
            "kind": "NamedType",
            "loc": Object {
              "end": 32,
              "start": 26,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 32,
                "start": 26,
              },
              "value": "String",
            },
          },
        },
      ],
      "interfaces": Array [],
      "kind": "ObjectTypeDefinition",
      "loc": Object {
        "end": 37,
        "start": 4,
      },
      "name": Object {
        "kind": "Name",
        "loc": Object {
          "end": 14,
          "start": 9,
        },
        "value": "Query",
      },
    },
  ],
  "kind": "Document",
  "loc": Object {
    "end": 40,
    "start": 0,
  },
}
`;

exports[`graphql print 1`] = `
Object {
  "definitions": Array [
    Object {
      "directives": Array [],
      "kind": "OperationDefinition",
      "loc": Object {
        "end": 32,
        "start": 4,
      },
      "name": undefined,
      "operation": "query",
      "selectionSet": Object {
        "kind": "SelectionSet",
        "loc": Object {
          "end": 32,
          "start": 10,
        },
        "selections": Array [
          Object {
            "alias": Object {
              "kind": "Name",
              "loc": Object {
                "end": 19,
                "start": 16,
              },
              "value": "foo",
            },
            "arguments": Array [],
            "directives": Array [],
            "kind": "Field",
            "loc": Object {
              "end": 27,
              "start": 16,
            },
            "name": Object {
              "kind": "Name",
              "loc": Object {
                "end": 27,
                "start": 21,
              },
              "value": "String",
            },
            "selectionSet": undefined,
          },
        ],
      },
      "variableDefinitions": Array [],
    },
  ],
  "kind": "Document",
  "loc": Object {
    "end": 35,
    "start": 0,
  },
}
`;

exports[`graphql printIntrospectionSchema 1`] = `
"\\"\\"\\"
Directs the executor to skip this field or fragment when the \`if\` argument is true.
\\"\\"\\"
directive @skip(
  \\"\\"\\"Skipped when true.\\"\\"\\"
  if: Boolean!
) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

\\"\\"\\"
Directs the executor to include this field or fragment only when the \`if\` argument is true.
\\"\\"\\"
directive @include(
  \\"\\"\\"Included when true.\\"\\"\\"
  if: Boolean!
) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

\\"\\"\\"Marks an element of a GraphQL schema as no longer supported.\\"\\"\\"
directive @deprecated(
  \\"\\"\\"
  Explains why this element was deprecated, usually also including a suggestion
  for how to access supported similar data. Formatted using the Markdown syntax
  (as specified by [CommonMark](https://commonmark.org/).
  \\"\\"\\"
  reason: String = \\"No longer supported\\"
) on FIELD_DEFINITION | ENUM_VALUE

\\"\\"\\"
A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.

In some cases, you need to provide options to alter GraphQL's execution behavior
in ways field arguments will not suffice, such as conditionally including or
skipping a field. Directives provide this by describing additional information
to the executor.
\\"\\"\\"
type __Directive {
  name: String!
  description: String
  locations: [__DirectiveLocation!]!
  args: [__InputValue!]!
}

\\"\\"\\"
A Directive can be adjacent to many parts of the GraphQL language, a
__DirectiveLocation describes one such possible adjacencies.
\\"\\"\\"
enum __DirectiveLocation {
  \\"\\"\\"Location adjacent to a query operation.\\"\\"\\"
  QUERY

  \\"\\"\\"Location adjacent to a mutation operation.\\"\\"\\"
  MUTATION

  \\"\\"\\"Location adjacent to a subscription operation.\\"\\"\\"
  SUBSCRIPTION

  \\"\\"\\"Location adjacent to a field.\\"\\"\\"
  FIELD

  \\"\\"\\"Location adjacent to a fragment definition.\\"\\"\\"
  FRAGMENT_DEFINITION

  \\"\\"\\"Location adjacent to a fragment spread.\\"\\"\\"
  FRAGMENT_SPREAD

  \\"\\"\\"Location adjacent to an inline fragment.\\"\\"\\"
  INLINE_FRAGMENT

  \\"\\"\\"Location adjacent to a variable definition.\\"\\"\\"
  VARIABLE_DEFINITION

  \\"\\"\\"Location adjacent to a schema definition.\\"\\"\\"
  SCHEMA

  \\"\\"\\"Location adjacent to a scalar definition.\\"\\"\\"
  SCALAR

  \\"\\"\\"Location adjacent to an object type definition.\\"\\"\\"
  OBJECT

  \\"\\"\\"Location adjacent to a field definition.\\"\\"\\"
  FIELD_DEFINITION

  \\"\\"\\"Location adjacent to an argument definition.\\"\\"\\"
  ARGUMENT_DEFINITION

  \\"\\"\\"Location adjacent to an interface definition.\\"\\"\\"
  INTERFACE

  \\"\\"\\"Location adjacent to a union definition.\\"\\"\\"
  UNION

  \\"\\"\\"Location adjacent to an enum definition.\\"\\"\\"
  ENUM

  \\"\\"\\"Location adjacent to an enum value definition.\\"\\"\\"
  ENUM_VALUE

  \\"\\"\\"Location adjacent to an input object type definition.\\"\\"\\"
  INPUT_OBJECT

  \\"\\"\\"Location adjacent to an input object field definition.\\"\\"\\"
  INPUT_FIELD_DEFINITION
}

\\"\\"\\"
One possible value for a given Enum. Enum values are unique values, not a
placeholder for a string or numeric value. However an Enum value is returned in
a JSON response as a string.
\\"\\"\\"
type __EnumValue {
  name: String!
  description: String
  isDeprecated: Boolean!
  deprecationReason: String
}

\\"\\"\\"
Object and Interface types are described by a list of Fields, each of which has
a name, potentially a list of arguments, and a return type.
\\"\\"\\"
type __Field {
  name: String!
  description: String
  args: [__InputValue!]!
  type: __Type!
  isDeprecated: Boolean!
  deprecationReason: String
}

\\"\\"\\"
Arguments provided to Fields or Directives and the input fields of an
InputObject are represented as Input Values which describe their type and
optionally a default value.
\\"\\"\\"
type __InputValue {
  name: String!
  description: String
  type: __Type!

  \\"\\"\\"
  A GraphQL-formatted string representing the default value for this input value.
  \\"\\"\\"
  defaultValue: String
}

\\"\\"\\"
A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all
available types and directives on the server, as well as the entry points for
query, mutation, and subscription operations.
\\"\\"\\"
type __Schema {
  \\"\\"\\"A list of all types supported by this server.\\"\\"\\"
  types: [__Type!]!

  \\"\\"\\"The type that query operations will be rooted at.\\"\\"\\"
  queryType: __Type!

  \\"\\"\\"
  If this server supports mutation, the type that mutation operations will be rooted at.
  \\"\\"\\"
  mutationType: __Type

  \\"\\"\\"
  If this server support subscription, the type that subscription operations will be rooted at.
  \\"\\"\\"
  subscriptionType: __Type

  \\"\\"\\"A list of all directives supported by this server.\\"\\"\\"
  directives: [__Directive!]!
}

\\"\\"\\"
The fundamental unit of any GraphQL Schema is the type. There are many kinds of
types in GraphQL as represented by the \`__TypeKind\` enum.

Depending on the kind of a type, certain fields describe information about that
type. Scalar types provide no information beyond a name and description, while
Enum types provide their values. Object and Interface types provide the fields
they describe. Abstract types, Union and Interface, provide the Object types
possible at runtime. List and NonNull types compose other types.
\\"\\"\\"
type __Type {
  kind: __TypeKind!
  name: String
  description: String
  fields(includeDeprecated: Boolean = false): [__Field!]
  interfaces: [__Type!]
  possibleTypes: [__Type!]
  enumValues(includeDeprecated: Boolean = false): [__EnumValue!]
  inputFields: [__InputValue!]
  ofType: __Type
}

\\"\\"\\"An enum describing what kind of type a given \`__Type\` is.\\"\\"\\"
enum __TypeKind {
  \\"\\"\\"Indicates this type is a scalar.\\"\\"\\"
  SCALAR

  \\"\\"\\"
  Indicates this type is an object. \`fields\` and \`interfaces\` are valid fields.
  \\"\\"\\"
  OBJECT

  \\"\\"\\"
  Indicates this type is an interface. \`fields\` and \`possibleTypes\` are valid fields.
  \\"\\"\\"
  INTERFACE

  \\"\\"\\"Indicates this type is a union. \`possibleTypes\` is a valid field.\\"\\"\\"
  UNION

  \\"\\"\\"Indicates this type is an enum. \`enumValues\` is a valid field.\\"\\"\\"
  ENUM

  \\"\\"\\"
  Indicates this type is an input object. \`inputFields\` is a valid field.
  \\"\\"\\"
  INPUT_OBJECT

  \\"\\"\\"Indicates this type is a list. \`ofType\` is a valid field.\\"\\"\\"
  LIST

  \\"\\"\\"Indicates this type is a non-null. \`ofType\` is a valid field.\\"\\"\\"
  NON_NULL
}
"
`;

exports[`graphql printSchema 1`] = `
"type Query {
  foo: String
}
"
`;

exports[`graphql typeFromAST 1`] = `"Query"`;
